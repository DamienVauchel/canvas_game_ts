(()=>{"use strict";var __webpack_modules__={138:()=>{eval("\n;// CONCATENATED MODULE: ./src/model/abstract/AbstractCircleElement.ts\nclass AbstractCircleElement {\n    constructor(ctx, x, y, radius, color) {\n        this.ctx = ctx;\n        this.x = x;\n        this.y = y;\n        this.radius = radius;\n        this.color = color;\n    }\n    render() {\n        this.ctx.beginPath();\n        this.ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n        this.ctx.fillStyle = this.color;\n        this.ctx.fill();\n    }\n}\n\n;// CONCATENATED MODULE: ./src/model/abstract/AbstractVelocityCircleElement.ts\n\nclass AbstractVelocityCircleElement extends AbstractCircleElement {\n    constructor(ctx, x, y, radius, color, velocity) {\n        super(ctx, x, y, radius, color);\n        this.velocity = velocity;\n    }\n    updatePosition() {\n        this.render();\n        this.x = this.x + this.velocity.x;\n        this.y = this.y + this.velocity.y;\n    }\n}\n\n;// CONCATENATED MODULE: ./src/model/Projectile.ts\n\nclass Projectile extends AbstractVelocityCircleElement {\n}\n\n;// CONCATENATED MODULE: ./src/model/Player.ts\n\n\nclass Player extends AbstractCircleElement {\n    shoot(clientX, clientY) {\n        const angle = Math.atan2(clientY - this.y, clientX - this.x);\n        const velocity = {\n            x: Math.cos(angle),\n            y: Math.sin(angle)\n        };\n        return new Projectile(this.ctx, this.x, this.y, 5, this.color, velocity);\n    }\n}\n\n;// CONCATENATED MODULE: ./src/config/CanvasConfig.ts\nclass CanvasConfig {\n    constructor(canvas) {\n        this.canvas = canvas;\n    }\n    configurate() {\n        this.canvas.width = innerWidth;\n        this.canvas.height = innerHeight;\n        return this.canvas;\n    }\n}\n\n;// CONCATENATED MODULE: ./src/model/Enemy.ts\n\nclass Enemy extends AbstractVelocityCircleElement {\n}\n\n;// CONCATENATED MODULE: ./src/service/EnemySpawner.ts\n\nclass EnemySpawner {\n    constructor(ctx, canvasWidth, canvasHeight, maxRandomRadius = 50, minRandomRadius = 5) {\n        this.ctx = ctx;\n        this.canvasWidth = canvasWidth;\n        this.canvasHeight = canvasHeight;\n        this.maxRandomRadius = maxRandomRadius;\n        this.minRandomRadius = minRandomRadius;\n        this.ctx = ctx;\n        this.canvasWidth = canvasWidth;\n        this.canvasHeight = canvasHeight;\n        this.maxRandomRadius = maxRandomRadius;\n        this.minRandomRadius = minRandomRadius;\n    }\n    spawnOneRandom(playerX, playerY) {\n        const radius = Math.random() * (this.maxRandomRadius - this.minRandomRadius) + this.minRandomRadius;\n        let x;\n        let y;\n        if (Math.random() < 0.5) {\n            x = Math.random() < 0.5 ? 0 - radius : this.canvasWidth + radius;\n            y = Math.random() * this.canvasHeight;\n        }\n        else {\n            x = Math.random() * this.canvasWidth;\n            y = Math.random() < 0.5 ? 0 - radius : this.canvasHeight + radius;\n        }\n        const angle = Math.atan2(playerY - y, playerX - x);\n        const velocity = {\n            x: Math.cos(angle),\n            y: Math.sin(angle)\n        };\n        return new Enemy(this.ctx, x, y, radius, 'red', velocity);\n    }\n}\n\n;// CONCATENATED MODULE: ./src/App.ts\n\n\nclass App {\n    constructor() {\n        this.services = {};\n        this.canvas = document.querySelector('canvas');\n        this.canvasCtx = this.canvas.getContext('2d');\n        const canvasConfig = new CanvasConfig(this.canvas);\n        canvasConfig.configurate();\n        this.initServices();\n    }\n    initServices() {\n        this.services.enemySpawner = new EnemySpawner(this.canvasCtx, this.canvas.width, this.canvas.height);\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    getCanvasCtx() {\n        return this.canvasCtx;\n    }\n    getServices() {\n        return this.services;\n    }\n    getService(service) {\n        return this.services[service];\n    }\n}\n\n;// CONCATENATED MODULE: ./src/index.ts\n\n\nconst app = new App();\nconst canvas = app.getCanvas();\nconst canvasCtx = app.getCanvasCtx();\nconst enemySpawner = app.getService('enemySpawner');\nconst playerX = canvas.width / 2;\nconst playerY = canvas.height / 2;\nconst player = new Player(canvasCtx, playerX, playerY, 30, 'blue');\nconst projectiles = [];\nconst enemies = [];\nconst animate = () => {\n    requestAnimationFrame(animate);\n    canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\n    player.render();\n    projectiles.forEach(projectile => {\n        projectile.updatePosition();\n    });\n    enemies.forEach(enemy => {\n        enemy.updatePosition();\n    });\n};\nconst spawnEnemies = () => {\n    setInterval(() => {\n        enemies.push(enemySpawner.spawnOneRandom(playerX, playerY));\n    }, 1000);\n};\naddEventListener('click', event => {\n    projectiles.push(player.shoot(event.clientX, event.clientY));\n});\nanimate();\nspawnEnemies();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///138\n")}},__webpack_exports__={};__webpack_modules__[138]()})();